---
# Copyright 2017, Rackspace US, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

- name: Set nspawn containers group
  hosts: "{{ container_group | default('all_containers') }}"
  gather_facts: false
  tasks:
    - name: Add hosts to dynamic inventory group
      group_by:
        key: nspawn_containers
        parents: all_nspawn_containers
      when:
        - container_tech == 'nspawn'
  tags:
    - always
    - nspawn-containers-destroy

- name: Destroy nspawn containers
  hosts: all_nspawn_containers
  gather_facts: false
  user: root
  tasks:
    - name: Get container status
      command: machinectl status "{{ inventory_hostname }}"
      register: machinectl_status
      failed_when: false
      delegate_to: "{{ physical_host }}"

    - name: Get container image status
      command: machinectl image-status "{{ inventory_hostname }}"
      register: machinectl_image_status
      failed_when: false
      delegate_to: "{{ physical_host }}"

    - name: Escape quote container name
      command: "systemd-escape {{ inventory_hostname }}"
      changed_when: false
      register: systemd_escape
      delegate_to: "{{ physical_host }}"

    - name: Get machine-id
      shell: >-
        hostnamectl --machine="{{ inventory_hostname }}" status | awk '/Machine ID/ {print $3}'
      register: _container_machine_id
      delegate_to: "{{ physical_host }}"

    - name: Disable container
      systemd:
        name: "systemd-nspawn@{{ systemd_escape.stdout }}"
        state: stopped
        enabled: false
      failed_when: false
      delegate_to: "{{ physical_host }}"
      when:
        - force_containers_destroy | bool

    - name: Halt container
      command: "machinectl poweroff {{ inventory_hostname }}"
      failed_when: false
      delegate_to: "{{ physical_host }}"
      when:
        - machinectl_status.rc == 0
        - force_containers_destroy | bool

    - name: Remove container
      command: "machinectl remove {{ inventory_hostname }}"
      delegate_to: "{{ physical_host }}"
      when:
        - machinectl_image_status.rc == 0
        - force_containers_destroy | bool

    - include_tasks: "common-tasks/remove_container_journal.yml"
      vars:
        container_machine_id: "{{ (_container_machine_id.stdout).strip() }}"

    - name: Destroy container data
      file:
        path: "{{ item }}"
        state: "absent"
      with_items:
        - "/openstack/{{ container_name }}"
        - "/openstack/backup/{{ container_name }}"
        - "/openstack/log/{{ container_name }}"
      delegate_to: "{{ physical_host }}"
      when:
        - force_containers_destroy | bool
        - force_containers_data_destroy | bool
  vars_prompt:
    - name: "force_containers_destroy"
      prompt: "Are you sure you want to destroy the nspawn containers?"
      default: "no"
      private: no
      when: force_containers_destroy is undefined
    - name: "force_containers_data_destroy"
      prompt: "Are you sure you want to destroy the nspawn container data?"
      default: "no"
      private: no
      when: force_containers_data_destroy is undefined
  tags:
    - nspawn-containers-destroy
